---
- name: Setup Docker and ifconfig on Ubuntu
  hosts: all
  become: yes
  vars_files:
    - lab.yml
  vars:
    ansible_python_interpreter: /usr/bin/python3.12

  tasks:
    - name: Remove malformed CUDA repository list file
      file:
        path: /etc/apt/sources.list.d/developer_download_nvidia_com_compute_cuda_repos_ubuntu1804_x86_64.list
        state: absent

    # Update the apt package index to ensure we have the latest information on available packages
    - name: Update apt package index
      apt:
        update_cache: yes

    # Update all packages on the server
    - name: Upgrade all packages to the latest version
      apt:
        upgrade: dist

    # - name: Uninstall Docker
    #   apt:
    #     name:
    #       - docker.io
    #       - docker-compose
    #     state: absent

    # Install required packages for Docker installation and network utilities
    - name: Install required packages
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
          - nmap
          - xclip
          - cifs-utils
          - net-tools
          - docker.io
          - docker-compose
        state: present
        update_cache: yes

    - name: Ensure required kernel modules are loaded
      modprobe:
        name: "{{ item }}"
      with_items:
        - overlay
        - br_netfilter

    - name: Stop Docker service
      command: sudo systemctl stop docker.service
      ignore_errors: yes

    - name: Stop Docker socket
      command: sudo systemctl stop docker.socket
      ignore_errors: yes

    - name: Reload systemctl
      command: sudo systemctl daemon-reload
      ignore_errors: yes

    - name: Start Docker socket
      command: sudo systemctl start docker.socket
      ignore_errors: yes

    - name: Start Docker service
      command: sudo systemctl start docker.service
      ignore_errors: yes

    # Remove any existing alias for 'l' in the ~/.bashrc file
    - name: Remove existing alias for 'l'
      lineinfile:
        path: /home/borg/.bashrc
        regexp: '^alias l='
        state: absent

    # Add alias to ~/.bashrc
    - name: Add alias to ~/.bashrc
      lineinfile:
        path: /home/borg/.bashrc
        line: 'alias l="ls -lah"'
        create: yes

    # Source ~/.bashrc to apply changes
    - name: Source /home/borg/.bashrc
      shell: source /home/borg/.bashrc
      args:
        executable: /bin/bash

    - name: Set timezone to Australian Eastern Standard Time
      command: timedatectl set-timezone Australia/Sydney

    # Create mount point directory
    - name: Create mount point directory
      file:
        path: /mnt/lab-docker-config
        state: directory

    - name: Create Docker Compose directory
      file:
        path: /opt/docker-compose
        state: directory

    # Mount SMB share
    - name: Mount SMB share
      mount:
        src: //192.168.128.74/lab-docker-config
        path: /mnt/lab-docker-config
        fstype: cifs
        opts: username={{ smb_username }},password={{ smb_password }},vers=3.0
        state: mounted

    # Configure Ethernet and Wireless interfaces
    - name: Configure network interfaces
      copy:
        dest: /etc/netplan/01-netcfg.yaml
        content: |
          network:
            version: 2
            ethernets:
              eno2:
                dhcp4: yes
                dhcp4-overrides:
                  route-metric: 100
            wifis:
              wlo1:
                dhcp4: yes
                dhcp4-overrides:
                  route-metric: 200
                access-points:
                  {{ wifi_ssid }}:
                    password: {{ wifi_password }}

    # Apply netplan configuration
    - name: Apply netplan configuration
      command: netplan apply

    # Bring up the Ethernet interface eno2
    - name: Bring up Ethernet interface eno2
      command: ip link set eno2 up

    # #=========================================
    # # Enable NVIDIA GPU persistence mode
    - name: Add NVIDIA PPA
      apt_repository:
        repo: ppa:graphics-drivers/ppa
        state: present

    - name: Install NVIDIA driver
      apt:
        name: nvidia-driver-470
        state: present
      register: nvidia_driver_install

    - name: Reboot the system if NVIDIA driver was installed or updated
      reboot:
      when: nvidia_driver_install.changed

    - name: Add CUDA keyring
      apt:
        deb: "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb"
        state: present
      tags: add_cuda_key

    - name: Add CUDA repository
      apt_repository:
        repo: "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /"
        state: present
      tags: add_cuda_repo

    # - name: Update apt cache
    #   apt:
    #     update_cache: yes

    # - name: Install CUDA toolkit
    #   apt:
    #     name: cuda
    #     state: present

    # - name: Add CUDA to PATH and LD_LIBRARY_PATH
    #   lineinfile:
    #     path: ~/.bashrc
    #     line: |
    #       export PATH=/usr/local/cuda/bin:$PATH
    #       export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
    #     create: yes
    #     state: present

    # - name: Source ~/.bashrc to apply changes
    #   shell: source ~/.bashrc